GAS LISTING ulibs.s 			page 1


   1              	# 1 "ulibs.S"
   1              	/**
   0              	
   0              	
   2              	** @file ulibs.S
   3              	**
   4              	** @author Numerous CSCI-452 classes
   5              	**
   6              	** assembly-language user-level library functions
   7              	*/
   8              	
   9              	#define	SP_ASM_SRC
  10              	
  11              	// get the system call codes
  12              	
  13              	#include "syscalls.h"
   1              	/**
   2              	** @file syscalls.h
   3              	**
   4              	** @author CSCI-452 class of 20225
   5              	**
   6              	** System call declarations
   7              	*/
   8              	
   9              	#ifndef SYSCALLS_H_
  10              	#define SYSCALLS_H_
  11              	
  12              	/*
  13              	** General (C and/or assembly) definitions
  14              	**
  15              	** This section of the header file contains definitions that can be
  16              	** used in either C or assembly-language source code.
  17              	*/
  18              	
  19              	#include "common.h"
   1              	/**
  20              	
  14              	
  15              	/**
  16              	** System call stubs
  17              	**
  18              	** All have the same structure:
  19              	**
  20              	**      move a code into EAX
  21              	**      generate the interrupt
  22              	**      return to the caller
  23              	**
  24              	** As these are simple "leaf" routines, we don't use
  25              	** the standard enter/leave method to set up a stack
  26              	** frame - that takes time, and we don't really need it.
  27              	*/
  28              	
  29              	#define	SYSCALL(name) \
  30              		.globl	name			; \
  31              	name:					; \
  32              		movl	$SYS_##name, %eax	; \
  33              		int	$INT_VEC_SYSCALL	; \
GAS LISTING ulibs.s 			page 2


  34              		ret
  35              	
  36              	/*
  37              	** "real" system calls
  38              	*/
  39              	
  40 0000 B8000000 	SYSCALL(exit)
  40      00CD80C3 
  41 0008 B8010000 	SYSCALL(spawn)
  41      00CD80C3 
  42 0010 B8020000 	SYSCALL(read)
  42      00CD80C3 
  43 0018 B8030000 	SYSCALL(write)
  43      00CD80C3 
  44 0020 B8040000 	SYSCALL(sleep)
  44      00CD80C3 
  45 0028 B8050000 	SYSCALL(kill)
  45      00CD80C3 
  46 0030 B8060000 	SYSCALL(waitpid)
  46      00CD80C3 
  47              	
  48              	/*
  49              	** This one is kind of a kludge - the user shell process
  50              	** calls it to register itself, so that the kernel shell
  51              	** that responds to console keyboard input knows which
  52              	** process to dispatch when the "run user shell" command
  53              	** is given.
  54              	*/
  55 0038 B8070000 	SYSCALL(ushell)
  55      00CD80C3 
  56              	
  57              	/*
  58              	** This is a bogus system call; it's here so that we can test
  59              	** our handling of out-of-range syscall codes in the syscall ISR.
  60              	*/
  61 0040 B8AD0B00 	SYSCALL(bogus)
  61      00CD80C3 
  62              	
  63              	/*
  64              	** Other library functions
  65              	*/
  66              	
  67              	/**
  68              	** fallbackExit() - dummy "startup" function
  69              	**
  70              	** calls exit(FAKE_EXIT) - serves as the "return to" code for
  71              	** main() functions, in case they don't call exit() themselves
  72              	*/
  73              	
  74              	        .globl  fallbackExit
  75              	fallbackExit:
  76              	        // alternate: use 'pushl %eax' to return
  77              	        // whatever value is in %eax
  78 0048 68AD0B00 	        pushl   $FAKE_EXIT      // termination status
  78      00
  79 004d E8FCFFFF 	        call    exit            // terminate this process
  79      FF
GAS LISTING ulibs.s 			page 3


GAS LISTING ulibs.s 			page 4


DEFINED SYMBOLS
             ulibs.S:40     .text:0000000000000000 exit
             ulibs.S:41     .text:0000000000000008 spawn
             ulibs.S:42     .text:0000000000000010 read
             ulibs.S:43     .text:0000000000000018 write
             ulibs.S:44     .text:0000000000000020 sleep
             ulibs.S:45     .text:0000000000000028 kill
             ulibs.S:46     .text:0000000000000030 waitpid
             ulibs.S:55     .text:0000000000000038 ushell
             ulibs.S:61     .text:0000000000000040 bogus
             ulibs.S:75     .text:0000000000000048 fallbackExit

NO UNDEFINED SYMBOLS
